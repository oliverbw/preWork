1.

function reverse(string){
  var revert = "";
  for (var i = string.length -1; i >= 0; i--){
  revert += string[i];
}
return revert;
}
console.log(reverse("code"))

2

function factorial(n) {
  return (n != 1) ? n * factorial(n - 1) : 1;
}

console.log( factorial(5) );

3.

function longestWord(string) {
    var str = string.split(" ");
    var longest = 0;
    var word = null;
    for (var i = 0; i < str.length; i++) {
        if (longest < str[i].length) {
            longest = str[i].length;
            word = str[i];
        }
    }
    return word;
}
console.log(longestWord("coding is complicated"))


4

function sumNums(num) {
  let sum = 0;
  for (let i = 1; i <= num; i++) {
    sum += i;
  }
  return sum;
}

console.log(sumNums(5));

5.

function time_conversion(minutes) {

var num = minutes;
var hours = (num/ 60);
var rhours = Math.floor(hours);
var minutes = (hours - rhours) *60;
var rminutes = Math.round(minutes);


var hourprefix = "";
var minuteprefix = "";

  if (rhours < 10) {
    hourprefix = "0";
  }
  if (rminutes < 10) {
    minuteprefix = "0";
  }
  return hourprefix + rhours + ":" + minuteprefix + rminutes;
}
console.log(time_conversion(98))
console.log(time_conversion(9))


6.

function countVowel(str)
{
  var vowelList = 'aeiou';
  var vowelNumber = 0;
  
  for(var x = 0; x < str.length ; x++)
  {
    if (vowelList.indexOf(str[x]) !== -1)
    {
      vowelNumber += 1;
    }
  }
  return vowelNumber;
}
console.log(countVowel("alea jacta est"));


7

function pali(palindrom)
{
    for( var i = palindrom.length; i > 0; i-- )
    {
        if( palindrom[i] = palindrom.charAt(palindrom.length)-1 ){
            return true;
        }else{
            return false;
        }
    }
}
console.log(pali('abba'));

8

function nearby_az(string) {

  var nearby = false;

  for (i = 0; i < string.length; i++){
    if(string.charAt(i) === "a"){
      for (j = 0; j < 3; i++) {
        if (string.charAt(i + j) === "z"){
          return true;
        }
      }
    }
    else if(string.charAt(i) === "z"){
      for (j = 0; j < 3; i++) {
        if (string.charAt(i + j) === "a"){
          return true;
        }
      }
    }
  }
  return nearby;
}

console.log(nearby_az("bbb"));


9

function two_sum(nums) {

  var positions = [];

  for (i = 0; i < nums.length; i++) {
     for (j = 0; j < nums.length; j++){
      if (i == j) continue;
      if (nums[i] + nums [j] == 0){
        positions.push(i);
        positions.push(j);
        return positions;
       }
      }
  }

  return positions;

}

console.log(two_sum([1, 3, -1, 5]))

10

function is_power_of_two(num) {
  if(num % 2 == 0){
    return true
  } else {
    return false
  }
}
console.log(is_power_of_two(5))

11

unction repeat_string_num_times(str, num){
    var a = [];
    while(a.length < num){
        a.push(str);
    }
    return a.join('');
}
console.log(repeat_string_num_times("bla", 3))

12

function sumAll(arr) {
  var total = 0;
  for (i = arr[0]; i < arr[arr.length-1] + 1; i++){
    total += i;
  }
  return total;
}
console.log(sumAll([6, 20]));


13

function is_it_true(x) {
  if(x === true || x === false){
    return true
  } else {
    return false
  }
}
console.log(is_it_true(42))

14

function largest_of_four(arr) {

  var largest = 0;
  var largestList = [];

  for (i = 0; i < 4; i++){
    for (j = 0; j < 4; j++){
      if (largest < arr[i][j]){
        largest = arr[i][j];
      }
    }
    largestList.push(largest);
    largest = 0;
  }
  return largestList;
}
console.log(largest_of_four([[13, 27, 18, 26], [4, 5, 1, 3], [32, 35, 37, 39], [1000, 1001, 857, 1]]) );


15

function isAnagram(test, original) {
  var isTest= test.split("").sort();
  var isOriginal= original.split("").sort();
  for(i = 0; i< isTest.length; i++){
    if(isTest[i]=== isOriginal[i] ){
      return true;
    } else {
      return false;
    }
  }
};

console.log(isAnagram("lleho", "hello"))




Bank.

function Bank(type){
  this.customer = {};
  this.account = {};
}
var bank = new Bank();

Bank.prototype.addCustomer = function(customer) {
  this.customer = customer;
  this.account = 0;
}
bank.addCustomer('Sheldon');

Bank.prototype.printAccount = function(customer) {
  console.log(`${this.customer} account is ${this.account}`)
}
bank.printAccount('Sheldon')

Bank.prototype.deposit = function(customer, account) {
  this.account += account;
  console.log(`${this.customer} account is ${this.account}`);
}
bank.deposit('Sheldon', 300)

Bank.prototype.withdraw = function(customer, amount) {
  if (this.account >= amount){
    this.account -= amount;
  }
  else if (this.account < amount){
    console.log("you cant");
  }
  console.log(`${this.customer} account is ${this.account}`)
}
bank.withdraw('Sheldon', 20)

bank.addCustomer('Susi');
bank.printAccount('Susi');
bank.deposit('Susi', 500);
bank.withdraw('Susi', 600);

bank.prototype.printAll(){
  
}

PLAYER

function Player(){
  this.titles = [];
  this.currenttrack = {};
}
function Track (artist, title, album){
  this.artist = artist;
  this.title = title;
  this.album = album;
}

var player = new Player();
var laloba = new Track('Shakira', 'La Loba', 'Loba');
var saklikalsin = new Track('Guru', 'Sakli Kalsin', 'Kitj');
var mozi = new Track('Mozart', 'Symphony n.5', 'Best of');

Player.prototype.add = function(track){
  this.titles.push(track);
  this.currenttrack = 0;
}
player.add(laloba);
player.add(mozi);
player.add(saklikalsin);

Player.prototype.play = function(){
  console.log(`Playing ${this.titles[this.currenttrack].title} by ${this.titles[this.currenttrack].artist}`);
}
player.play();

Player.prototype.next = function(){
  if (this.currenttrack == this.titles.length-1) 
  {this.currenttrack = 0;
  } else {
    this.currenttrack ++;
  }
}

Player.prototype.previous = function(){
  if(this.currenttrack == 0){
    this.currenttrack = this.titles.length - 1;
  } else {
    this.currenttrack --;
  }
}

player.next();
player.play();
player.previous();
player.play();
player.previous();
player.play();
player.previous();
player.play();
player.previous();
player.play();
player.next();
